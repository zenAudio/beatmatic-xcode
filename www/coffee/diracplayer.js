// Generated by CoffeeScript 1.3.3
(function() {
  var DiracPlayer, DiracPlayerMgr;

  DiracPlayer = (function() {

    function DiracPlayer(voice) {
      this.voice = voice;
      console.log("MPD: initializing Dirac player for voice: " + this.voice);
    }

    DiracPlayer.prototype.play = function(startMs, playEndedCallback) {
      console.log("MPD: called play: " + startMs + ", " + playEndedCallback);
      return Cordova.exec(playEndedCallback, playEndedCallback, "DiracPlayer", "play", [this.voice, startMs]);
    };

    DiracPlayer.prototype.stop = function() {
      return Cordova.exec(this.nop, this.nop, "DiracPlayer", "stop", [this.voice]);
    };

    DiracPlayer.prototype.changeDuration = function(duration) {
      console.log("MPD: called changeDuration: " + this.voice);
      return Cordova.exec(this.nop, this.nop, "DiracPlayer", "changeDuration", [this.voice, duration]);
    };

    DiracPlayer.prototype.changePitch = function(pitch) {
      console.log("MPD: called changePitch: " + this.voice);
      return Cordova.exec(this.nop, this.nop, "DiracPlayer", "changePitch", [this.voice, pitch]);
    };

    DiracPlayer.prototype.matchBPM = function(bpm) {
      if (bpm !== 120) {
        return this.changeDuration(120 / bpm);
      }
    };

    DiracPlayer.prototype.nop = function() {};

    return DiracPlayer;

  })();

  DiracPlayerMgr = (function() {

    DiracPlayerMgr.prototype.nop = function() {};

    function DiracPlayerMgr() {
      console.log("MPD: creating dirac player manager.");
      if (typeof Cordova !== "undefined" && Cordova !== null) {
        Cordova.exec(this.nop, this.nop, "DiracPlayer", "diracInit", []);
      }
    }

    DiracPlayerMgr.prototype.newPlayer = function(voice, sampleUrl) {
      var result;
      console.log("MPD: creating new dirac player for " + voice + " and " + sampleUrl);
      result = new DiracPlayer(voice);
      Cordova.exec(this.nop, this.nop, "DiracPlayer", "load", [voice, sampleUrl]);
      return result;
    };

    return DiracPlayerMgr;

  })();

  $(function() {
    BEATmatic.DiracPlayerMgr = DiracPlayerMgr;
    return BEATmatic.DiracPlayer = DiracPlayer;
  });

}).call(this);
